----------------------------------------------------------------------------------------------

COMO CRIAR UMA LISTA DE ITENS COM FLAT LIST:
--> Basta importar o FlatList da biblioteca "react-native".
--> Ele é um elemento do React Native usado para renderizar listas de componentes parecidos na tela.
--> Então, basta chamar a tag <FlatList/> e passar alguns parâmetros a ela para que ela renderize a lista com os itens.
--> A lista renderizada é na vertical, para mudar para a horizontal, é preciso passar a propriedade 'horizontal' ao FlatList.
--> Quando a lista é mostrada, ela também exibe uma barra de scroll indesejada ao passar o dedo, mas dá pra fazer ela sumir usando a propriedade 'showHorizontalScrollIndicator={false}'.
--> Para estilizar a lista renderizada, é preciso usar a propriedade 'contentContainerStyle={styles.listStyle}'.
--> Depois, ir no StyleSheet e definir o estilo para o listStyle.

    <FlatList
        data={[1,2,3,4,5]}
        renderItem={( item ) => (
            <Componente propriedadeDele={algumaCoisa} />
        )}
        horizontal
        showsHorizontalScrollIndicator={false}
	contentContainerStyle={styles.listStyle}
    />


----------------------------------------------------------------------------------------------

COMO RENDERIZAR DUAS COLUNAS NO FLAT LIST:
--> Basta adicionar a propriedade numColumns={2}.
     <FlatList
        data={[1,2,3,4,5]}
        renderItem={( item ) => (
            <Componente propriedadeDele={algumaCoisa} />
        )}
        horizontal
        showsHorizontalScrollIndicator={false}
	contentContainerStyle={styles.listStyle}
	numColumns={2}
      />

----------------------------------------------------------------------------------------------

COMO PASSAR UM OBJETO COM DADOS PARA UMA FLATLIST RENDERIZAR:
--> Na propriedade 'data', basta colocar o nome do vetor do useState, que contenha os  objetos retornados pela requisição da api no useEffect.
--> Na propriedade 'renderItem', é só passar uma arrow function que recebe o parâmetro '{item}', ou seja a desestruturação de cada objeto do vetor do useState.
--> No retorno da arrow function, que é algum componente com alguma propriedade exigida, basta passar como propriedade o item.nomeDaPropriedade.
--> Exemplo:

< FlatList
	data={dataValues}
	renderItem={(item) => (
		<Elemento 
			propriedade={item.nomeDaPropriedade}
		/>
	)}
	horizontal
	showsHorizontalScrollIndicator={false}
	contentContainerStyle={styles.dataList}
/>

----------------------------------------------------------------------------------------------